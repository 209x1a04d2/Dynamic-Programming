public class Solution {
    public static int minimizeCost(int n, int k, int []height){
        // Write your code here.
        int[] dp = new int[n];
        for(int i = 0;i<n;i++) dp[i] = -1;
        getMin(height,k,n-1,dp);
        return dp[n-1];
    }
    public static int getMin(int[] height,int k,int indx,int[] dp){
        if(indx == 0){
            dp[0] = 0;
            return dp[0];
        }
        if(dp[indx]!=-1) return dp[indx];
        int dist = Integer.MAX_VALUE,mini = Integer.MAX_VALUE;
        for(int i = 1;i<=k;i++){
            if(indx-i>=0){
                dist = getMin(height, k, indx-i,dp) + Math.abs(height[indx] - height[indx-i]); 
                mini = Math.min(mini,dist);
            }
        }
        dp[indx] = mini;
        return dp[indx];
    }
}
